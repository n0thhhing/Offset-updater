class PatternScanner {
  private pattern: number[];
  private lps: number[];

  constructor(pattern: string) {
    this.pattern = this.parsePattern(pattern);
    this.lps = this.computeLPS(this.pattern);
  }

  private parsePattern(pattern: string): number[] {
    return pattern.split(' ').map((hex) => {
      if (hex === '??') {
        return -1;
      } else {
        return parseInt(hex, 16);
      }
    });
  }

  private computeLPS(pattern: number[]): number[] {
    const lps: number[] = Array(pattern.length).fill(0);
    let len = 0;
    let i = 1;
    while (i < pattern.length) {
      if (
        pattern[i] === pattern[len] ||
        pattern[i] === -1 ||
        pattern[len] === -1
      ) {
        len++;
        lps[i] = len;
        i++;
      } else {
        if (len !== 0) {
          len = lps[len - 1];
        } else {
          lps[i] = 0;
          i++;
        }
      }
    }
    return lps;
  }

  scan(buffer: Buffer): number[] {
    const matches: number[] = [];
    let i = 0;
    let j = 0;
    const patternLength = this.pattern.length;
    const bufferLength = buffer.length;
    while (i < bufferLength) {
      if (this.pattern[j] === buffer[i] || this.pattern[j] === -1) {
        i++;
        j++;
      }
      if (j === patternLength) {
        matches.push(i - j);
        j = this.lps[j - 1];
      } else if (
        i < bufferLength &&
        this.pattern[j] !== buffer[i] &&
        this.pattern[j] !== -1
      ) {
        if (j !== 0) {
          j = this.lps[j - 1];
        } else {
          i++;
        }
      }
    }
    return matches;
  }
}

// Usage:
import * as fs from 'fs';

const pattern =
  'f5 53 be a9 f3 7b 01 a9 ?? ?? ?? ?? ?? ?? ?? 39 f3 03 01 2a f4 03 00 aa ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? 28 00 80 52 ?? ?? ?? 39 e0 03 14 aa ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? b9 1f 01 13 6b ?? ?? ?? ?? e0 03 14 aa ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 e1 03 13 2a 02 01 40 f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 91 e1 03 1f aa ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 80 12 ?? ?? ?? ?? c0 03 5f d6 ?? ?? ?? ?? e9 23 bb 6d f9 63 01 a9 f7 5b 02 a9 f5 53 03 a9 f3 7b 04 a9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 39 ?? ?? ?? f9 f4 03 00 aa ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? f9';
const scanner = new PatternScanner(pattern);

const buffer = fs.readFileSync('libs/new.so');
const matches = scanner.scan(buffer);
console.log('Matches found at positions:', matches);
